# various commands used to make stuff

# annotation stuff

# find all annotation files and put them into a file without their preceding paths
for file in `find /home/michal/Downloads/pcddata/processed/annotated/rares/ ! -regex .*normals.pcd | grep label | xargs echo`; do basename $file; done > allannotations.txt

# full paths
find /home/michal/Downloads/pcddata/processed/annotated/rares/ ! -regex .*normals.pcd | grep label > fullannotations.txt

# count the total number of annotated objects, removing the rgb_0000 string
preceding the label
sed -r 's/^.{9}//' allannotations.txt | wc -l

# show unique instances
sed -r 's/^.{9}//' allannotations.txt | sort | uniq > uniqueannotations.txt

# select a random instance of an annotation
while read ann; do find . -regex .*$ann | shuf -n 1; done < uniqueannotations.txt

# sync data to pauli
rsync -rvi --ignore-existing ~/Downloads/pcddata/processed/paramtest/ /media/michal/Pauli/masterdata/processed/paramtest/

# process aggregate feature data
python featureprocess.py -af ../../../data/features/aggregate/ `find ../../../data/features/ -regex .*fixed.* | xargs echo`

# randomly select an instance of an object from the full annotations list
while read ann; do cat fullannotations.txt | grep $ann | shuf -n 1 ; done < uniqueannotations.txt

# look for the files in collected.txt in the given directory and copy them to this directory
for itm in `sed -r 's/^.{57}//' collected.txt`; do fl=`find ~/Downloads/pcddata/processed/testing/dsannot/0\,01/annotated/rares/ -regex .*$itm.*`; cp $fl .; done

# remove make a file containing files created before a certain date and time
fls=`find /media/michal/Pauli/masterdata/processed/paramtest/iter100/annotated/rares -regex .*nonPlanes\<pfhrgb_iss.*`
first=1432210006
for f in $fls; do
    echo $f
    bn=`basename $f`
    fn="${bn%.*}"
    dt=`echo $fn | sed -r 's/^.{23}//'`
    ldt=`echo $dt | sed -r 's/.{9}$//'`
    tm=`echo $dt | sed -r 's/^.{9}//'`
    tm=`echo $tm | sed -r 's/-/:/g'`
    echo $ldt
    echo $tm
    tme=`date --date="$ldt $tm" +%s`
    echo $tme
    if [[ "$tme" -lt "$first" ]]; then
       echo $f >> tmp.txt
    fi
done

# find files which do not contain any data
fls=`find . -regex .*[0-9].txt`
bad=`grep -L BEGIN_DATA $fls`
for f in $bad; do
    dirname $f
done
